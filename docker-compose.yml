version: "2.2"

services:
  es_service_1:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=${CLUSTER_NAME}
      - cluster.initial_master_nodes=es01,es02,es03
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - discovery.seed_hosts=es02,es03
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es_data_1:/usr/share/elasticsearch/data
    ports:
      - ${ES_PORT}:9200
    networks:
      - elastic_network
    healthcheck:
      test: curl --silent --fail localhost:9200/_cluster/health || exit 1
      interval: 30s
      timeout: 30s
      retries: 10

  es_service_2:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    container_name: es02
    environment:
      - node.name=es02
      - cluster.name=${CLUSTER_NAME}
      - discovery.seed_hosts=es01,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false

    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es_data_2:/usr/share/elasticsearch/data
    networks:
      - elastic_network
    healthcheck:
      test: curl --silent --fail localhost:9200/_cluster/health || exit 1
      interval: 30s
      timeout: 30s
      retries: 10

  es_service_3:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    container_name: es03
    environment:
      - node.name=es03
      - cluster.name=${CLUSTER_NAME}
      - discovery.seed_hosts=es01,es02
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es_data_3:/usr/share/elasticsearch/data
    networks:
      - elastic_network
    healthcheck:
      test: curl --silent --fail localhost:9200/_cluster/health || exit 1
      interval: 30s
      timeout: 30s
      retries: 10

networks:
  elastic_network:
    driver: bridge

volumes:
  es_data_1:
    driver: local
  es_data_2:
    driver: local
  es_data_3:
    driver: local
  kibanadata:
    driver: local
